#!/usr/bin/env perl

use 5.010;
use strict;
use warnings;

use Getopt::Long;
use Config::Auto;
use Catmandu::Store;
use Catmandu::Indexer;
use Catmandu::Indexer::Converter;

my $index_driver = 'Mock';
my %index_args   = ();
my $store_driver = 'Mock';
my %store_args   = (file => '/tmp/test.db');

GetOptions(
    "index=s"   => \$index_driver,
    "io=s%"     => \%index_args,
    "store=s"   => \$store_driver,
    "so=s%"     => \%store_args);

my $file     = shift;
my $map_file = shift;

my %converter_args = ();

if (defined $map_file && -r $map_file) {
  %converter_args = (mapping => Config::Auto::parse($map_file));
}

unless ($file eq 'process') {
  &usage;
  exit 1;
}

my $store     = Catmandu::Store->new($store_driver,%store_args);
my $indexer   = Catmandu::Indexer->new($index_driver,%index_args);
my $converter = Catmandu::Indexer::Converter->new(%converter_args);

my $count = $indexer->index($store, $converter);

$indexer->done();
$store->done();

say "imported: $count object(s)";

sub usage {
    my @index_opts;
    my @store_opts;

    while( my ($key, $value) = each(%index_args)) {
      push(@index_opts,"    --io $key=$value");
    }

    while( my ($key, $value) = each(%store_args)) {
      push(@store_opts,"    --so $key=$value");
    }

    my $index_opt_str = join "\n" , @index_opts;

    my $store_opt_str = join "\n" , @store_opts;

    say <<"EOF";
usage: $0 [OPTIONS] process mapping-file

options:
    --import=<$index_driver>
$index_opt_str    
    --store=<$store_driver>
$store_opt_str    
EOF
}
