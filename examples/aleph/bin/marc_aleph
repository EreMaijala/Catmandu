#!/usr/bin/env perl
use Aleph::Record;
use MARC::Batch;
use Getopt::Long;
use Data::Dumper;
use MARC::File::XML ( BinaryEncoding => 'utf8' );
MARC::File::XML->default_record_format('USMARC');

my $type  = 'XML';
my $fixes = [];

GetOptions("fix=s@" => \$fixes , "type=s" => \$type);

my $file = shift;

die "usage: $0 [--fix <mmm>]* [--type=XML|MARC] file" unless $file;

warn "Parsing: $file as $type...";

my $batch = MARC::Batch->new($type, $file);

my $marc;
my $cnt = 0;
while ($marc = $batch->next()) {
  foreach my $fix (@$fixes) {
    eval "$fix;";
    warn "ERROR: $@" if $@;
  }

  my $aleph = Aleph::Record->new(rec => $marc, fmt => 'BK', seq => ++$cnt , enc => 'L');
  print $aleph->as_aleph_sequential();
}

sub add_field {
  my $field = MARC::Field->new(@_);
  $marc->append_fields($field);
}
